<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Eventing on Paul Cassidy Software Developer</title>
    <link>https://qawarrior.github.io/tags/eventing/index.xml</link>
    <description>Recent content in Eventing on Paul Cassidy Software Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016 Paul H Cassidy</copyright>
    <atom:link href="/tags/eventing/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Watching PS Vars for changes - Events</title>
      <link>https://qawarrior.github.io/2011/02/15/watching-ps-vars-for-changes---events</link>
      <pubDate>Tue, 15 Feb 2011 13:47:00 +0000</pubDate>
      
      <guid>https://qawarrior.github.io/2011/02/15/watching-ps-vars-for-changes---events</guid>
      <description>&lt;p&gt;I have a Testing framework built around Powershell and .net. In the framework there are a couple of main objects that their property values are assigned to Globals that are well know and used. The problem was I did not want to make them read only as this causes issues if reloading the framework and or trying to change paths. I needed a way to report back the value of a variable if it changes so i could keep the objects in sync. First I used Set-PSBreakPoint –Action to Check the value but it breaks before the value is set. Then I thought I need an Event but Powershell has limited native events. So I just started tweeting and thanks to @oising I finally have a solution. Here is a simple example that can be built upon. &lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;pre&gt;&lt;span style=&#34;color: #008000&#34;&gt;#Set value to a new variable&lt;br /&gt;&lt;/span&gt;&lt;span style=&#34;color: #800080&#34;&gt;$n&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #ff0000&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&#34;color: #008000&#34;&gt;#set A break point to watch for any write actions to that variable&lt;br /&gt;#this will fire a new event VariableChanged&lt;br /&gt;&lt;/span&gt;&lt;span style=&#34;color: #800080&#34;&gt;$BP&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #ff0000&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;Set-PSBreakpoint&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;-Variable&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0000ff&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;-Mode&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0000ff&#34;&gt;Write&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;-Action&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; {&lt;br /&gt;    &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;New-Event&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;-SourceIdentifier&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0000ff&#34;&gt;VariableChanged&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;}&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&#34;color: #008000&#34;&gt;#Now register to recieve the VariableChanged events&lt;br /&gt;#Here we just check the value of our variable and get its new value&lt;br /&gt;&lt;/span&gt;&lt;span style=&#34;color: #800080&#34;&gt;$EE&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #ff0000&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;Register-EngineEvent&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;-SourceIdentifier&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0000ff&#34;&gt;VariableChanged&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;-Action&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; {&lt;br /&gt;    &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;Write-Host&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #800080&#34;&gt;$n&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;-ForegroundColor&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0000ff&#34;&gt;Yellow&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&#34;color: #008000&#34;&gt;#assign a new value to n and see the vent fires&lt;br /&gt;&lt;/span&gt;&lt;span style=&#34;color: #800080&#34;&gt;$n&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #ff0000&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&#34;color: #008000&#34;&gt;#do some cleanup&lt;br /&gt;&lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;Get-PSBreakpoint&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0000ff&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;Remove-PSBreakpoint&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;Get-EventSubscriber&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0000ff&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;Unregister-Event&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;-Force&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;Get-Event&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #0000ff&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color: #000000&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color: #5f9ea0&#34;&gt;Remove-Event&lt;/span&gt;&lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;&lt;p&gt;&amp;#160;&lt;/p&gt;&lt;br /&gt;&lt;br /&gt;&lt;p&gt;Good-Times | Get-Command –:)&lt;/p&gt;  
</description>
    </item>
    
  </channel>
</rss>
